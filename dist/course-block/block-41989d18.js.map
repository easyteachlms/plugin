{"version":3,"sources":["webpack:///external \"React\"","webpack:///external \"wp.element\"","webpack:///external \"wp.i18n\"","webpack:///external \"ReactDOM\"","webpack:///external \"wp.blocks\"","webpack:///external \"wp.blockEditor\"","webpack:///external \"lodash\"","webpack:///external \"wp.data\"","webpack:///./blocks/course/components/tutorial/context.js","webpack:///./blocks/course/components/tutorial/index.js","webpack:///./blocks/course/edit.js","webpack:///./blocks/course/save.js","webpack:///./blocks/course/settings.js","webpack:///./blocks/course/index.js"],"names":["module","exports","React","wp","element","i18n","ReactDOM","blocks","blockEditor","lodash","data","createContext","Spotlight","SpotlightManager","SpotlightTarget","SpotlightTransition","Tutorial","withState","active","disabled","children","setState","useContext","tutorialContext","start","next","prev","finish","Prompt","emptyStateProps","header","description","primaryAction","Button","appearance","onClick","secondaryAction","tertiaryAction","style","border","background","EmptyState","actions","text","dialogPlacement","heading","target","key","ALLOWED_BLOCKS","edit","props","attributes","className","clientId","name","useSelect","select","blockType","getBlockType","hasInnerBlocks","getBlocks","length","useDispatch","replaceInnerBlocks","allowedBlocks","save","Content","settings","title","__","category","keywords","supports","html","align","yourAttr","type","registerBlockCollection","registerBlockType"],"mappings":";;;;;;;;;;;;;;;;;+HAAAA,EAAOC,QAAUC,O,iBCAjBF,EAAOC,QAAUE,GAAGC,S,iBCApBJ,EAAOC,QAAUE,GAAGE,M,iBCApBL,EAAOC,QAAUK,U,iBCAjBN,EAAOC,QAAUE,GAAGI,Q,iBCApBP,EAAOC,QAAUE,GAAGK,a,iBCApBR,EAAOC,QAAUQ,Q,iBCAjBT,EAAOC,QAAUE,GAAGO,M,sOCQLC,0BAAc,CAACC,cAAWC,qBAAkBC,oBAAiBC,0BCgH7DC,EAhHEC,YAAW,CACxBC,OAAQ,KACRC,UAAU,GAFGF,EAGZ,YAAiD,IAA7CC,EAA4C,EAA5CA,OAAQC,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,SAAgB,EAGYC,qBAAWC,GAAhEX,EAHyC,EAGzCA,UAAWC,EAH8B,EAG9BA,iBAAkBE,EAHY,EAGZA,oBAE/BS,EAAQ,kBAAMH,EAAS,CAAEH,OAAQ,KAEjCO,EAAO,kBAAMJ,GAAS,iBAAO,CAAEH,QAASA,GAAU,GAAK,OAEvDQ,EAAO,kBAAML,GAAS,iBAAO,CAAEH,QAASA,GAAU,GAAK,OAEvDS,EAAS,kBAAMN,EAAS,CAAEH,OAAQ,QAyClCU,EAAS,WACjB,IAqBMC,EAAkB,CACvBC,OAAQ,uBACRC,YAAY,uTAIHC,cA1BT,oBAACC,EAAA,EAAD,CACCC,WAAW,UACXC,QAASX,GAFV,oBA2BSY,gBAlBT,oBAACH,EAAA,EAAD,CAAQE,QAASV,GAAjB,oBAmBSY,eAbT,oBAACJ,EAAA,EAAD,CAAQC,WAAW,cAAcC,QAAS,kBAAMd,EAAS,CAACF,UAAWA,MAArE,sCAeD,OACC,2BAAKmB,MAAO,CAACC,OAAQ,iBAAkBC,WAAY,UACtC,oBAACC,EAAA,EAAeZ,KAK5B,OACI,oBAAC,WAAD,MACM,IAASV,GACP,oBAACN,EAAD,KACI,oBAACe,EAAD,MAEA,oBAACb,EAAD,KAlDE,MAAVG,EAAuB,KAjCV,CACb,oBAACN,EAAD,CACI8B,QAAS,CAAC,CAAEP,QAASV,EAAMkB,KAAM,cACjCC,gBAAgB,aAChBC,QAAQ,kBACRC,OAAO,sBACPC,IAAI,gBAEJ,sKAEJ,oBAACnC,EAAD,CACI8B,QAAS,CACL,CAAEP,QAASV,EAAMkB,KAAM,QACvB,CAAER,QAAST,EAAMiB,KAAM,SAE3BC,gBAAgB,gBAChBC,QAAQ,SACRC,OAAO,SACPC,IAAI,UARR,UAYA,oBAACnC,EAAD,CACI8B,QAAS,CAAC,CAAEP,QAASR,EAAQgB,KAAM,WACnCC,gBAAgB,eAChBC,QAAQ,MACRC,OAAO,MACPC,IAAI,OALR,WAaY7B,IAoDHE,IAGR,IAASD,GAAYC,MCpG5B4B,EAAiB,CAAC,uBA+DTC,EAjDF,SAAAC,GACyCA,EAA1CC,WADW,IACCC,EAA8BF,EAA9BE,UAAWC,EAAmBH,EAAnBG,SAAUC,EAASJ,EAATI,KADvB,EAOjBC,qBACH,SAAEC,GAKD,MAAO,CACNC,WAAWC,EAHRF,EAAQ,eADXE,cAIyBJ,GACzBK,eACCH,EAAQ,qBAAsBI,UAAWP,GAAWQ,OACpD,KAGH,CAAER,EAAUC,IAdZK,GANoB,EAKpBF,UALoB,EAMpBE,gBAiB8BG,sBAAa,qBAApCC,mBAGL,GAAKJ,EACD,OACI,2BAAKP,UAAWA,EAAU,UAClC,2BAAKA,UAAU,uBAAf,gCACY,oBAAC,cAAD,CAAaY,cAAehB,KA9BtB,IAmCblC,EAAoBQ,qBAAWC,GAA/BT,gBAEL,OACF,oBAAC,EAAD,KACM,2BAAKsC,UAAWA,GACrB,2BAAKA,UAAU,uBAAf,gCACA,oBAACtC,EAAD,CAAiBwC,KAAK,uBACrB,oBAAC,cAAD,CAAaU,cAAehB,QCjEjBiB,EAJF,SAAC,GAA4B,EAA3Bd,WAA4B,IAAhBC,EAAe,EAAfA,UACvB,OAAO,2BAAKA,UAAWA,GAAW,oBAAC,cAAYc,QAAb,QCgCvBC,EA9BE,CACb,sBACA,CACIC,MAAOC,aAAG,UACVtC,YAAa,cACbuC,SAAU,SAMVC,SAAU,CACNF,aAAI,SACJA,aAAI,SACJA,aAAI,UAERG,SAAU,CACNC,MAAM,EACNC,OAAO,GAEXvB,WAAY,CACRwB,SAAU,CACNC,KAAM,WAGd3B,OACAgB,S,MC1BRY,kCAAyB,eAAgB,CAAET,MAAO,kBAClDU,oBAAiB,WAAjB,cAAqBX,M","file":"course-block/block-41989d18.js","sourcesContent":["module.exports = React;","module.exports = wp.element;","module.exports = wp.i18n;","module.exports = ReactDOM;","module.exports = wp.blocks;","module.exports = wp.blockEditor;","module.exports = lodash;","module.exports = wp.data;","import { createContext } from '@wordpress/element';\nimport {\n    Spotlight,\n    SpotlightManager,\n    SpotlightTarget,\n    SpotlightTransition,\n} from '@atlaskit/onboarding';\n\nexport default createContext({Spotlight, SpotlightManager, SpotlightTarget, SpotlightTransition});","\nimport { withState } from '@wordpress/compose';\nimport { Fragment, useContext } from '@wordpress/element';\nimport Button from '@atlaskit/button';\nimport EmptyState from '@atlaskit/empty-state';\n\nimport tutorialContext from './context';\n\nconst Tutorial = withState( {\n    active: null,\n    disabled: false,\n} )( ( { active, disabled, children, setState } ) => {\n    // @TODO react hook for componentDidMount where we check the user api for if this user has perma-disabled the tutorial. We should offer a prompt.\n\n    const { Spotlight, SpotlightManager, SpotlightTransition } = useContext(tutorialContext);\n\n    const start = () => setState({ active: 0 });\n\n    const next = () => setState(() => ({ active: (active || 0) + 1 }));\n\n    const prev = () => setState(() => ({ active: (active || 0) - 1 }));\n\n    const finish = () => setState({ active: null });\n\n    const renderActiveSpotlight = () => {\n        const variants = [\n            <Spotlight\n                actions={[{ onClick: next, text: 'Next step'}]}\n                dialogPlacement=\"top center\"\n                heading=\"Insert A Lesson\"\n                target=\"create-first-lesson\"\n                key=\"createLesson\"\n            >\n                <p>The first step is creating a Lesson. Click the insert block button to insert a new lesson block where we will continue our tutorial.</p>\n            </Spotlight>,\n            <Spotlight\n                actions={[\n                    { onClick: next, text: 'Next' },\n                    { onClick: prev, text: 'Prev' },\n                ]}\n                dialogPlacement=\"bottom center\"\n                heading=\"Yellow\"\n                target=\"yellow\"\n                key=\"yellow\"\n            >\n                Test 2\n            </Spotlight>,\n            <Spotlight\n                actions={[{ onClick: finish, text: 'Got it' }]}\n                dialogPlacement=\"bottom right\"\n                heading=\"Red\"\n                target=\"red\"\n                key=\"red\"\n            >\n                Test 3\n            </Spotlight>,\n        ];\n\n        if (active == null) return null;\n\n        return variants[active];\n    };\n\n    const Prompt = () => {\n\t\tconst primaryAction = (\n\t\t\t<Button\n\t\t\t\tappearance=\"primary\"\n\t\t\t\tonClick={start}\n\t\t\t>\n\t\t\t\tGive me the tour\n\t\t\t</Button>\n\t\t);\n\t\t\n\t\tconst secondaryAction = (\n\t\t\t<Button onClick={next}>\n\t\t\t\tSecondary action\n\t\t\t</Button>\n        );\n\n        const tertiaryAction = (\n\t\t\t<Button appearance=\"subtle-link\" onClick={() => setState({disabled: !disabled})}>\n                Don't show Tutorial prompt again.\n\t\t\t</Button>\n        );\n\t\t\n\t\tconst emptyStateProps = {\n\t\t\theader: 'Hi! First time here?',\n\t\t\tdescription: `{TK COPY FOR TUTORIAL CALL TO ACTION} Lorem ipsum is a pseudo-Latin text used in web design, \n\t\t\t\t\ttypography, layout, and printing in place of English to emphasise \n\t\t\t\t\tdesign elements over content. It's also called placeholder (or filler) \n\t\t\t\t\ttext. It's a convenient tool for mock-ups.`,\n            primaryAction,\n            secondaryAction,\n            tertiaryAction\n\t\t};\n\t\treturn(\n\t\t\t<div style={{border: '1px solid gray', background: 'white'}}>\n                <EmptyState {...emptyStateProps} />\n            </div>\n\t\t);\n\t}\n    // @TODO create context at this level that we can use for the child components so that we can pass the spotlight target component down in pseudo-state.\n    return (\n        <Fragment>\n            { true !== disabled && (\n                <SpotlightManager>\n                    <Prompt/>\n        \n                    <SpotlightTransition>\n                        {renderActiveSpotlight()}\n                    </SpotlightTransition>\n        \n                    {children}\n                </SpotlightManager>\n            )}\n            {true === disabled && children}\n        </Fragment>\n    );\n} );\n\nexport default Tutorial;","import {\n\tInspectorControls,\n\tInnerBlocks,\n\tBlockControls,\n\tBlockVerticalAlignmentToolbar,\n\t__experimentalBlockVariationPicker,\n\t__experimentalBlock as Block,\n} from '@wordpress/block-editor';\nimport { useContext } from '@wordpress/element';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { createBlock } from '@wordpress/blocks';\nimport { get, map } from 'lodash';\n\nimport { Tutorial, tutorialContext } from './components';\n\nconst ALLOWED_BLOCKS = ['easyteachlms/lesson'];\n\nconst createBlocksFromInnerBlocksTemplate = ( innerBlocksTemplate ) => {\n\treturn map(\n\t\tinnerBlocksTemplate,\n\t\t( [ name, attributes, innerBlocks = [] ] ) =>\n\t\t\tcreateBlock(\n\t\t\t\tname,\n\t\t\t\tattributes,\n\t\t\t\tcreateBlocksFromInnerBlocksTemplate( innerBlocks )\n\t\t\t)\n\t);\n};\n\nconst edit = props => {\n    const { attributes, className, clientId, name } = props;\n\n    // We get some information when the block's internal state changes.\n    const {\n\t\tblockType,\n\t\thasInnerBlocks,\n\t} = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tgetBlockType,\n\t\t\t} = select( 'core/blocks' );\n\n\t\t\treturn {\n\t\t\t\tblockType: getBlockType( name ),\n\t\t\t\thasInnerBlocks:\n\t\t\t\t\tselect( 'core/block-editor' ).getBlocks( clientId ).length >\n\t\t\t\t\t0,\n\t\t\t};\n\t\t},\n\t\t[ clientId, name ]\n    );\n\n\tconst { replaceInnerBlocks } = useDispatch( 'core/block-editor' );\n\n\t// @TODOIf has innerblocks and some context provided tutorial finished is it set to true and or if the user has specified to never to be shown.\n    if ( hasInnerBlocks ) {\n        return(\n            <div className={className+'lms-ui'}>\n\t\t\t\t<div className=\"lms-ui course-title\">EasyTeach LMS Course Builder</div>\n                <InnerBlocks allowedBlocks={ALLOWED_BLOCKS}/>\n            </div>\n        )\n\t}\n\t\n\tconst { SpotlightTarget } = useContext(tutorialContext);\n    \n    return(\n\t\t<Tutorial>\n        <div className={className}>\n\t\t\t<div className=\"lms-ui course-title\">EasyTeach LMS Course Builder</div>\n\t\t\t<SpotlightTarget name=\"create-first-lesson\">\n\t\t\t\t<InnerBlocks allowedBlocks={ALLOWED_BLOCKS}/>\n\t\t\t</SpotlightTarget>\n        </div>\n\t\t</Tutorial>\n    );\n}\n\nexport default edit;","import { InnerBlocks } from '@wordpress/block-editor';\n\nconst save = ({attributes, className}) => {\n    return <div className={className}><InnerBlocks.Content/></div>\n}\n\nexport default save;","\nimport { __ } from '@wordpress/i18n';\nimport edit from './edit';\nimport save from './save';\n\nconst settings = [\n    'easyteachlms/course',\n    {\n        title: __('Course'), \n        description: 'Block Desc.',\n        category: 'layout',\n        // icon: {\n        //     background: '#yourcolor',\n        //     foreground: '#yourcolor',\n        //     src: 'Dashicon',\n        // },\n        keywords: [\n            __( 'Key 1' ),\n            __( 'Key 2' ), \n            __( 'Key 3' )\n        ],\n        supports: {\n            html: false, \n            align: true\n        },\n        attributes: {\n            yourAttr: {\n                type: 'string' \n            }\n        },\n        edit,\n        save,\n    }\n];\n\nexport default settings;","import { registerBlockType, registerBlockCollection } from '@wordpress/blocks';\nimport { __ } from '@wordpress/i18n'; \nimport settings from './settings';\nimport './course.scss';\n\nregisterBlockCollection( 'easyteachlms', { title: 'EasyTeach LMS' } );\nregisterBlockType(...settings);"],"sourceRoot":""}