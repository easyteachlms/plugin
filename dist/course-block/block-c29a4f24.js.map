{"version":3,"sources":["webpack:///external \"React\"","webpack:///external \"wp.data\"","webpack:///external \"wp.components\"","webpack:///external \"wp.element\"","webpack:///external \"wp.i18n\"","webpack:///./blocks/course/components/tutorial/context.js","webpack:///./blocks/course/components/tutorial/art/art2.png","webpack:///./blocks/course/components/tutorial/index.js","webpack:///./blocks/course/edit.js","webpack:///./blocks/course/save.js","webpack:///./blocks/course/settings.js","webpack:///./blocks/course/index.js","webpack:///external \"ReactDOM\"","webpack:///external \"wp.blockEditor\"","webpack:///external \"wp.blocks\"","webpack:///external \"lodash\""],"names":["module","exports","React","wp","data","components","element","i18n","createContext","TutorialWalkthrough","isOpen","children","steps","selector","content","onRequestClose","setState","active","Tutorial","withState","disabled","setAttributes","useContext","tutorialContext","Prompt","Art","style","textAlign","marginBottom","src","illustration","width","Segment","Button","primary","onClick","secondary","tutorial","ALLOWED_BLOCKS","edit","attributes","className","clientId","name","useSelect","select","hasInnerBlocks","getBlocks","length","allowedBlocks","save","Content","settings","title","__","description","category","styles","label","isDefault","keywords","supports","html","align","multiple","type","default","registerBlockCollection","registerBlockType","ReactDOM","blockEditor","blocks","lodash"],"mappings":"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","file":"course-block/block-c29a4f24.js","sourcesContent":["module.exports = React;","module.exports = wp.data;","module.exports = wp.components;","module.exports = wp.element;","module.exports = wp.i18n;","import { Fragment, createContext } from '@wordpress/element';\nimport Tour from 'reactour';\n\n// Use state to toggle on off\nconst TutorialWalkthrough = ({ isOpen, children }) => {\n    const steps = [\n        {\n          selector: '.components-button.block-list-appender__toggle.block-editor-button-block-appender',\n          content: 'This is my first Step',\n        },\n        {\n            selector: 'button.ui.teal.button',\n            content: 'This is the NEXT step'\n        }\n        // ...\n    ];\n    return(\n       <Fragment>\n            <Tour\n                steps={steps}\n                isOpen={isOpen}\n                onRequestClose={() => { setState({active: false}) }} \n            />\n            {children}\n       </Fragment>\n    );\n}\n\nexport default createContext({TutorialWalkthrough});","export default __webpack_public_path__ + \"course-block/assets/art2-d92c9b1c.png\";","\nimport { withState } from '@wordpress/compose';\nimport { Fragment, useContext } from '@wordpress/element';\nimport { Button, Segment } from 'semantic-ui-react';\n\nimport tutorialContext from './context';\n\nimport illustration from './art/art2.png';\n\nconst Tutorial = withState( {\n    active: false,\n    disabled: false,\n} )( ( { active, disabled, children, setState, setAttributes } ) => {\n    // @TODO react hook for componentDidMount where we check the user api for if this user has perma-disabled the tutorial. We should offer a prompt.\n\n    const { TutorialWalkthrough } = useContext(tutorialContext);\n\n    const Prompt = () => {\n        const Art = () => {\n            return <div style={{textAlign:'center', marginBottom: '-2em'}}><img src={illustration} width='500px'/></div>\n        }\n\n\t\treturn(\n\t\t\t<Fragment>\n                <Segment>\n                    <Art/>\n                    <h1>Hi! First time here?</h1>\n                    <p><strong>TK COPY FOR TUTORIAL CALL TO ACTION</strong> Lorem ipsum is a pseudo-Latin text used in web design, \n                        typography, layout, and printing in place of English to emphasise \n                        design elements over content. It's also called placeholder (or filler) \n                        text. It's a convenient tool for mock-ups.</p>\n                    \n                    <Button primary onClick={() => { setState({active: true}) }}>Give me the tour</Button>\n\n                    <Button secondary onClick={() => {\n                        setState({disabled: !disabled});\n                        setAttributes({tutorial: false});\n                    }}>\n                        Don't show Tutorial prompt again.\n                    </Button>\n                </Segment>\n            </Fragment>\n\t\t);\n\t}\n    // @TODO create context at this level that we can use for the child components so that we can pass the spotlight target component down in pseudo-state.\n    return (\n        <Fragment>\n            <TutorialWalkthrough isOpen={active}>\n            { true !== disabled && (\n                <Fragment>\n                    <Prompt/>\n                    {children}\n                </Fragment>\n            )}\n            {true === disabled && children}\n            </TutorialWalkthrough>\n        </Fragment>\n    );\n} );\n\nexport default Tutorial;","import { InnerBlocks } from '@wordpress/block-editor';\nimport { useContext, Fragment } from '@wordpress/element';\nimport { Dashicon } from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { createBlock } from '@wordpress/blocks';\nimport { get, map } from 'lodash';\n\nimport './edit.scss';\n\nimport { Tutorial, tutorialContext } from './components';\n\nconst ALLOWED_BLOCKS = ['easyteachlms/lesson'];\n\nconst edit = ({ attributes, className, clientId, name, setAttributes }) => {\n    const {tutorial} = attributes;\n\n    // We get some information when the block's internal state changes.\n    const {\n\t\thasInnerBlocks,\n\t} = useSelect(\n\t\t( select ) => {\n\t\t\treturn {\n\t\t\t\thasInnerBlocks: select( 'core/block-editor' ).getBlocks( clientId ).length > 0,\n\t\t\t};\n\t\t},\n\t\t[ clientId, name ]\n\t);\n\n\t// @TODOIf has innerblocks and some context provided tutorial finished is it set to true and or if the user has specified to never to be shown.\n    if ( hasInnerBlocks || false === tutorial ) {\n        return(\n\t\t\t<Fragment>\n\t\t\t\t<div className={className}>\n\t\t\t\t\t<InnerBlocks allowedBlocks={ALLOWED_BLOCKS}/>\n\t\t\t\t</div>\n\t\t\t</Fragment>\n        )\n\t}\n\t\n\t// const { SpotlightTarget } = useContext(tutorialContext);\n    \n    return(\n\t\t<Fragment>\n\t\t\t<Tutorial setAttributes={setAttributes}>\n\t\t\t\t<div className={className}>\n\t\t\t\t\t<InnerBlocks allowedBlocks={ALLOWED_BLOCKS}/>\n\t\t\t\t</div>\n\t\t\t</Tutorial>\n\t\t</Fragment>\n    );\n}\n\nexport default edit;","import { InnerBlocks } from '@wordpress/block-editor';\n\nconst save = ({attributes, className}) => {\n    return <div className={className}><InnerBlocks.Content/></div>\n}\n\nexport default save;","\nimport { __ } from '@wordpress/i18n';\nimport edit from './edit';\nimport save from './save';\n\nconst settings = [\n    'easyteachlms/course',\n    {\n        title: __('Course'), \n        description: 'Block Desc.',\n        category: 'education',\n        // icon: {\n        //     background: '#yourcolor',\n        //     foreground: '#yourcolor',\n        //     src: 'Dashicon',\n        // },\n        styles:  [\n            {\n                name: 'default',\n                label: __('Default'),\n                isDefault: true,\n            },\n            {\n                name: 'mini',\n                label: __('Mini'),\n            },\n            {\n                name: 'full-screen',\n                label: __('Full Screen'),\n            }\n        ],\n        keywords: [\n            __( 'Course' ),\n            __( 'Easy Teach LMS' ), \n            __( 'LMS' ),\n            __( 'Learning' )\n        ],\n        supports: {\n            html: false, \n            align: false,\n            multiple: false,\n        },\n        attributes: {\n            tutorial: {\n                type: 'boolean',\n                default: true\n            }\n        },\n        edit,\n        save,\n    }\n];\n\nexport default settings;","import { registerBlockType, registerBlockCollection } from '@wordpress/blocks';\nimport settings from './settings';\n\nregisterBlockCollection( 'easyteachlms', { title: 'EasyTeach LMS' } );\nregisterBlockType(...settings);","module.exports = ReactDOM;","module.exports = wp.blockEditor;","module.exports = wp.blocks;","module.exports = lodash;"],"sourceRoot":""}