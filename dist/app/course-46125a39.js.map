{"version":3,"sources":["webpack:///external \"React\"","webpack:///external \"wp.domReady\"","webpack:///external \"wp.apiFetch\"","webpack:///external \"wp.element\"","webpack:///./assets/js/course/quiz/index.js","webpack:///./assets/js/course/blockController.js","webpack:///./assets/js/course/index.js","webpack:///external \"ReactDOM\"","webpack:///external \"lodash\""],"names":["module","exports","React","wp","domReady","apiFetch","element","QuizComponent","id","title","data","useDidMount","console","log","quiz","blockController","children","fn","Children","map","child","isValidElement","props","cloneElement","className","undefined","includes","Button","onClick","qProps","quizzes","Course","withState","loaded","items","setState","courseAsReactElement","ReactHtmlParser","reactElms","path","then","d","document","querySelector","querySelectorAll","forEach","value","innerHTML","render","ReactDOM","lodash"],"mappings":";;;;;;;;;;;;;;;;;uGAAAA,EAAOC,QAAUC,O,kBCAjBF,EAAOC,QAAUE,GAAGC,U,kBCApBJ,EAAOC,QAAUE,GAAGE,U,8DCApBL,EAAOC,QAAUE,GAAGG,S,0KCiBLC,EAdO,SAAC,GAAwB,EAAtBC,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAKhC,OAJAC,aAAY,WACRC,QAAQC,IAAI,QACZD,QAAQC,IAAIH,MAGZ,+BACI,2CACA,8BAAKD,GACL,oBAAC,IAAD,CAAMK,KAAMJ,MC4DTK,EA7DS,SAAlBA,EAAmBC,EAAUN,EAAMO,GACrC,OAAOC,WAASC,IAAIH,GAAU,SAACI,GAC3B,IAAKC,yBAAeD,GAChB,OAAO,oBAAC,UAAD,KAAUA,GAGjBA,EAAME,MAAMN,WACZI,EAAQG,uBAAaH,EAAO,CACxBJ,SAAUD,EAAgBK,EAAME,MAAMN,SAAUN,EAAMO,MAPzB,IAY7BO,EAAcJ,EAAME,MAApBE,UACR,QAAIC,IAAcD,EACd,OAAOJ,EAIX,GAAII,EAAUE,SAAS,+BACnB,OACI,+BACI,oBAAC,WAAD,KACI,wCACCN,EACD,oBAACO,EAAA,EAAD,CACIC,QAAS,WACLhB,QAAQC,IAAI,eAFpB,uBAYhB,GAAIW,EAAUE,SAAS,8BAA+B,CAClD,IAAMG,EAAST,EAAME,MAErB,OADAO,EAAOnB,KAAOA,EAAKoB,QAAQV,EAAME,MAAMd,IAChC,oBAAC,EAASqB,GAGrB,OAAIL,EAAUE,SAAS,0BAEf,+BACI,oBAAC,WAAD,KACI,6BACI,iDAEHN,EACD,iCAMT,oBAAC,WAAD,KAAWA,OCzDpBW,EAASC,YAAU,CACrBC,QAAQ,EACRvB,MAAM,EACNwB,MAAO,IAHIF,EAIZ,YAAiD,EAA9CC,OAA8C,EAAtCvB,KAAuC,IAAjCwB,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,SAAUnB,EAAe,EAAfA,SAc3BoB,EAAuBC,IAAgBrB,GAM7C,OAJAL,aAAY,WAfC,IAAC2B,IAgBLF,EAfL/B,IAAS,CAAEkC,KAAM,+CAAgDC,MAC7D,SAACC,GACGN,EAAS,CACLF,QAAQ,EACRvB,KAAM+B,EACNP,MAAOnB,EAAgBuB,EAAWG,WAa3C,2BAAKjB,UAAU,wBAAwBU,MAGlD9B,KAAS,WACDsC,SAASC,cAAc,kCACVD,SAASE,iBAAiB,iCAClCC,SAAQ,SAACC,GACV,IAAM9B,EAAW8B,EAAMC,UACvBC,iBAAO,oBAACjB,EAAD,KAASf,GAAoB8B,U,iBC3ChD9C,EAAOC,QAAUgD,U,iBCAjBjD,EAAOC,QAAUiD,S","file":"app/course-46125a39.js","sourcesContent":["module.exports = React;","module.exports = wp.domReady;","module.exports = wp.apiFetch;","module.exports = wp.element;","import { useDidMount } from '@daniakash/lifecycle-hooks';\nimport Quiz from 'react-quiz-component';\n\nconst QuizComponent = ({ id, title, data }) => {\n    useDidMount(() => {\n        console.log('QUIZ');\n        console.log(data);\n    });\n    return (\n        <div>\n            <h4>Quiz Here</h4>\n            <h3>{title}</h3>\n            <Quiz quiz={data} />\n        </div>\n    );\n};\n\nexport default QuizComponent;\n","import {\n    Fragment,\n    RawHTML,\n    Children,\n    isValidElement,\n    cloneElement,\n} from '@wordpress/element';\n\nimport { Button } from 'semantic-ui-react';\nimport Quiz from './quiz';\n\nconst blockController = (children, data, fn) => {\n    return Children.map(children, (child) => {\n        if (!isValidElement(child)) {\n            return <RawHTML>{child}</RawHTML>;\n        }\n\n        if (child.props.children) {\n            child = cloneElement(child, {\n                children: blockController(child.props.children, data, fn),\n            });\n        }\n\n        // Class Name is so important for us we need to double check it. All of our logic is based on class names.\n        const { className } = child.props;\n        if (undefined === className) {\n            return child;\n        }\n\n        // We can do checks here\n        if (className.includes('wp-block-easyteachlms-topic')) {\n            return (\n                <div>\n                    <Fragment>\n                        <h3>Topic:</h3>\n                        {child}\n                        <Button\n                            onClick={() => {\n                                console.log('COMPLETED');\n                            }}\n                        >\n                            Mark as Completed\n                        </Button>\n                    </Fragment>\n                </div>\n            );\n        }\n\n        if (className.includes('wp-block-easyteachlms-quiz')) {\n            const qProps = child.props;\n            qProps.data = data.quizzes[child.props.id];\n            return <Quiz {...qProps} />;\n        }\n\n        if (className.includes('wp-block-embed-youtube')) {\n            return (\n                <div>\n                    <Fragment>\n                        <p>\n                            <strong>VIDEO HERE</strong>\n                        </p>\n                        {child}\n                        <hr />\n                    </Fragment>\n                </div>\n            );\n        }\n\n        return <Fragment>{child}</Fragment>;\n    });\n};\n\nexport default blockController;\n","// Determines style selected and then proceeds to load the course correctly.\n// Dives through finding the lesson block and gathering up its resources.\nimport { withState } from '@wordpress/compose';\nimport { render } from '@wordpress/element';\nimport domReady from '@wordpress/dom-ready';\nimport ReactHtmlParser from 'react-html-parser';\nimport apiFetch from '@wordpress/api-fetch';\nimport { useDidMount } from '@daniakash/lifecycle-hooks';\n\nimport blockController from './blockController';\n\nconst Course = withState({\n    loaded: false,\n    data: false,\n    items: '',\n})(({ loaded, data, items, setState, children }) => {\n    const init = (reactElms) => {\n        apiFetch({ path: '/easyteachlms/v3/course/get/?course_id=193' }).then(\n            (d) => {\n                setState({\n                    loaded: true,\n                    data: d,\n                    items: blockController(reactElms, d),\n                });\n            },\n        );\n    };\n\n    // const HTMLParser = new Parser();\n    const courseAsReactElement = ReactHtmlParser(children);\n\n    useDidMount(() => {\n        init(courseAsReactElement);\n    });\n\n    return <div className=\"easyteach-lms-course\">{items}</div>;\n});\n\ndomReady(() => {\n    if (document.querySelector('.wp-block-easyteachlms-course')) {\n        const elms = document.querySelectorAll('.wp-block-easyteachlms-course');\n        elms.forEach((value) => {\n            const children = value.innerHTML;\n            render(<Course>{children}</Course>, value);\n        });\n    }\n});\n","module.exports = ReactDOM;","module.exports = lodash;"],"sourceRoot":""}