{"version":3,"sources":["webpack:///external \"React\"","webpack:///external \"wp.data\"","webpack:///external \"wp.i18n\"","webpack:///external \"wp.element\"","webpack:///./blocks/_shared/components/collapsible/index.js","webpack:///./blocks/_shared/components/block-initial-state/index.js","webpack:///./blocks/topic/edit.js","webpack:///./blocks/topic/save.js","webpack:///./blocks/topic/settings.js","webpack:///./blocks/topic/index.js","webpack:///external \"lodash\"","webpack:///external \"ReactDOM\"","webpack:///external \"wp.blocks\"","webpack:///external \"wp.blockEditor\""],"names":["module","exports","React","wp","data","i18n","element","Collapsible","title","postType","className","children","useState","open","setState","caretDirection","classNames","collapsed","Header","as","icon","content","__","toUpperCase","onClick","e","SearchExisting","setAttributes","Dropdown","placeholder","fluid","search","selection","options","key","value","text","onChange","v","console","log","style","fontFamily","fontSize","CreateNew","withState","setAtttributes","Form","onSubmit","s","post","api","models","charAt","slice","save","id","Group","Input","name","Button","color","InitialState","size","Segment","textAlign","Divider","horizontal","edit","attributes","clientId","useSelect","select","blockType","getBlockType","hasInnerBlocks","getBlocks","length","useDispatch","replaceInnerBlocks","disabled","Content","settings","description","category","keywords","supports","html","align","type","default","registerBlockType","lodash","ReactDOM","blocks","blockEditor"],"mappings":"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","file":"topic-block/block-13ad725d.js","sourcesContent":["module.exports = React;","module.exports = wp.data;","module.exports = wp.i18n;","module.exports = wp.element;","import { useState } from '@wordpress/element';\nimport classNames from 'classnames';\nimport { Header } from 'semantic-ui-react';\nimport { __ } from '@wordpress/i18n';\n\nconst Collapsible = ({ title, postType, className, children }) => {\n\tconst [ open, setState ] = useState(true);\n\t\n\tconst collapseHandler = (e) => {\n\t\tsetState(!open);\n\t}\n\t\n\tlet caretDirection = open ? 'down' : 'right';\n\n\treturn(\n        <div className={classNames(className, { collapsed: !open })}>\n            <div className=\"collapsible-title\">\n                <Header as='h4' icon={\"caret \" + caretDirection} content={__( postType.toUpperCase() + ' ' + title)} onClick={collapseHandler} />\n            </div>\n            <div className=\"collapsible-content\">\n                {children}\n            </div>\n        </div>\n    )\n}\n\nexport default Collapsible;","import { withState } from '@wordpress/compose';\nimport { Fragment } from '@wordpress/element';\nimport { Dropdown, Form, Divider, Segment, Header } from 'semantic-ui-react';\nimport { __ } from '@wordpress/i18n';\n\nconst capitalize = (s) => {\n    if (typeof s !== 'string') return ''\n    return s.charAt(0).toUpperCase() + s.slice(1)\n}\n\nconst SearchExisting = ({postType, setAttributes}) => {\n    // We need a promise that will set state and say loaded and also load the options from post values\n    const options = [\n        { key: 'a', value: 'a', text: 'Post A' },\n        { key: 'b', value: 'b', text: 'Post B' },\n        { key: 'c', value: 'c', text: 'Post C' },\n        { key: 'd', value: 'd', text: 'Post D' },\n        { key: 'e', value: 'e', text: 'Post E' },\n        { key: 'f', value: 'f', text: 'Post F' },\n        { key: 'g', value: 'g', text: 'Post G' },\n        { key: 'h', value: 'h', text: 'Post H' },\n        { key: 'i', value: 'i', text: 'Post I' },\n        { key: 'j', value: 'j', text: 'Post J' },\n        { key: 'l', value: 'l', text: 'Post L' },\n        { key: 'k', value: 'k', text: 'Post K' },\n    ];\n \n    return (\n        <Fragment>\n            <Header as='h3' icon='search' content={__('Search for existing ' + postType)} />\n            <Dropdown\n                placeholder={__('Select ' + postType)}\n                fluid\n                search\n                selection\n                options={options}\n                onChange={v => console.log(v)}\n                style={{\n                    fontFamily:\"Lato,'Helvetica Neue',Arial,Helvetica,sans-serif\",\n                    fontSize: '14px',\n                }}\n            />\n        </Fragment>\n    );\n}\n\nconst CreateNew = withState( {\n    title: '',\n} )( ( { title, postType, setState, setAtttributes } ) => {\n    const handleChange = (e, { name, value }) => {\n        setState( { title: value } );\n    }\n    const handleCreation = () => {\n        let post = new wp.api.models[capitalize(postType)]( { title } );\n        post.save();\n        setAtttributes( { title, id: post.id } );\n        // And also using the wp.api go create a lesson with this title, return the ID and then set the attribute as the ID.\n    }\n    return (\n        <Fragment>\n            <Header as='h3' icon='add' content={__('Start a new ' + postType)} />\n            <Form onSubmit={handleCreation}>\n              <Form.Group>\n                <Form.Input\n                  placeholder='Title'\n                  name='title'\n                  value={title}\n                  onChange={handleChange}\n                />\n                <Form.Button color=\"teal\" icon=\"add\" content={__('Create ' + postType)} />\n              </Form.Group>\n            </Form>\n        </Fragment>\n    );\n} );\n\n// This component will contain a title and a post id. and state and inspector sidebar tools that let you define those manually as well (Should be another component)\n// It will have a title field and a post selector search box that will filter to the post types you pass in as a prop.\n\n// Should only be used when you have no inner block content or some other conditional like that\n\nconst InitialState = ({postType, title, id, size, setAttributes, className}) => {\n    // Select A Post\n    // What the course title is, and what course is associated with it (for courses that should be easy... or not??)\n    // What the lesson title is and what the lesson post its associated with...\n    // What the topic title is and what the topic post is associated with.\n    return(\n        <div className={className}>\n            <Segment textAlign='center'>\n                <SearchExisting postType={postType}/>\n                <Divider horizontal>\n                    <span  style={{\n                        fontFamily:\"Lato,'Helvetica Neue',Arial,Helvetica,sans-serif\",\n                        fontSize: '14px',\n                    }}>Or</span>\n                </Divider>\n                <CreateNew title={title} postType={postType} setAtttributes={setAttributes}/>\n            </Segment>\n        </div>\n    );\n}\n\nexport default InitialState;","import {\n\tInspectorControls,\n\tInnerBlocks,\n\tBlockControls,\n\tBlockVerticalAlignmentToolbar,\n\t__experimentalBlockVariationPicker,\n\t__experimentalBlock as Block,\n} from '@wordpress/block-editor';\nimport { withDispatch, useDispatch, useSelect } from '@wordpress/data';\n\nimport { createBlock } from '@wordpress/blocks';\nimport { get, map } from 'lodash';\n\nimport Collapsible from 'components/collapsible';\nimport InitialState from 'components/block-initial-state';\nimport { Button } from 'semantic-ui-react';\nimport { __ } from '@wordpress/i18n';\n\n// const ALLOWED_BLOCKS = ['core/paragraph'];\n\nconst createBlocksFromInnerBlocksTemplate = ( innerBlocksTemplate ) => {\n\treturn map(\n\t\tinnerBlocksTemplate,\n\t\t( [ name, attributes, innerBlocks = [] ] ) =>\n\t\t\tcreateBlock(\n\t\t\t\tname,\n\t\t\t\tattributes,\n\t\t\t\tcreateBlocksFromInnerBlocksTemplate( innerBlocks ) \n\t\t\t)\n\t);\n};\n\nconst edit = ({ attributes, className, clientId, name, setAttributes }) => {\n\tconst { title, id } = attributes;\n   \n\t// We get some information when the block's internal state changes.\n    const {\n\t\tblockType,\n\t\thasInnerBlocks,\n\t} = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tgetBlockType,\n\t\t\t} = select( 'core/blocks' );\n\n\t\t\treturn {\n\t\t\t\tblockType: getBlockType( name ),\n\t\t\t\thasInnerBlocks:\n\t\t\t\t\tselect( 'core/block-editor' ).getBlocks( clientId ).length >\n\t\t\t\t\t0,\n\t\t\t};\n\t\t},\n\t\t[ clientId, name ]\n\t);\n\n\tconst { replaceInnerBlocks } = useDispatch( 'core/block-editor' );\n\n\tif ( 0 !== id ) {\n\t\treturn(\n\t\t\t<div><p>We have an existing topic! You will not be able to edit the topic because its stored in the database.</p><p>We will have an edit button that will open in a new window the topic editor.</p></div>\n\t\t);\n\t}\n\n\tif ( 0 === id && '' !== title ) {\n\t\treturn(\n\t\t\t<Collapsible className={className} title={title} postType=\"topic\">\n\t\t\t\t<InnerBlocks/>\n\t\t\t\t<Button size=\"small\" color=\"teal\" disabled>Mark Topic Completed</Button>\n\t\t\t</Collapsible>\n\t\t)\n\t}\n    \n\treturn <InitialState title={title} postType=\"topic\" setAttributes={setAttributes} className={className}/>\n}\n\nexport default edit;","import { InnerBlocks } from '@wordpress/block-editor';\nimport { Button } from 'semantic-ui-react';\n\nconst save = ({attributes, className}) => {\n    return <div className={className}><InnerBlocks.Content/><Button size=\"small\" color=\"teal\" disabled>Mark Topic Completed</Button></div>\n}\n\nexport default save;","\nimport { __ } from '@wordpress/i18n';\nimport edit from './edit';\nimport save from './save';\n\nconst settings = [\n    'easyteachlms/topic',\n    {\n        title: __('Topic'), \n        description: 'Block Desc.',\n        category: 'education',\n        // icon: {\n        //     background: '#yourcolor',\n        //     foreground: '#yourcolor',\n        //     src: 'Dashicon',\n        // },\n        keywords: [\n            __( 'Key 1' ),\n            __( 'Key 2' ), \n            __( 'Key 3' )\n        ],\n        supports: {\n            html: false, \n            align: true\n        },\n        attributes: {\n            id: {\n                type: 'string',\n                default: 0,\n            },\n            title: {\n                type: 'string',\n                default: '',\n            },\n        },\n        edit,\n        save,\n    }\n];\n\nexport default settings;","import { registerBlockType } from '@wordpress/blocks';\nimport settings from './settings';\nimport './topic.scss';\n\nregisterBlockType(...settings);","module.exports = lodash;","module.exports = ReactDOM;","module.exports = wp.blocks;","module.exports = wp.blockEditor;"],"sourceRoot":""}